This is a mirror of http://www.vim.org/scripts/script.php?script_id=3558

This plugin adds a simple functionality that creates increasing and decreasing number or letter sequences on multiple lines via visual mode.

Simply select the desired columns via visual mode and use standard vim mapping for adding or subtracting.

Follow repository on GitHub: https://github.com/triglav/vim-visual-increment


Usage:


1. For example, we have an array of 5 items and we would like to define them:

        example[0] = 'e';
        example[0] = 'e';
        example[0] = 'e';
        example[0] = 'e';
        example[0] = 'e';

2. Press <C-V> at the first index and select all the index columns on multiple lines, press <C-A>:

        example[0] = 'e';
        example[1] = 'e';
        example[2] = 'e';
        example[3] = 'e';
        example[4] = 'e';


Increment steps:


You can use [count] to define the "increment step" between each line. For example, by pressing 5<C-A> at the index column, you will get:

        example[5] = 'e';
        example[10] = 'e';
        example[15] = 'e';
        example[20] = 'e';
        example[25] = 'e';


Letter sequence:


You need to add the following line to your .vimrc file:

        set nrformats=alpha

The letter sequence is then created via <C-X> as expected:

        example[0] = 'e';
        example[1] = 'd';
        example[2] = 'c';
        example[3] = 'b';
        example[4] = 'a';


Octal & Hex sequences:


To create octal or hexadecimal sequences, simply add the respective option to the nrformats:

        set nrformats=aplha,octal,hex

Octal numbers start with a zero:

        example[0] = 01;
        example[1] = 06;
        example[2] = 013;
        example[3] = 020;
        example[4] = 025;

Hexadecimal numbers start with 0x or 0X:

        example[0] = 0x1;
        example[1] = 0x6;
        example[2] = 0xb;
        example[3] = 0x10;
        example[4] = 0x15;

